generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String           @id @default(cuid())
  email        String           @unique
  passwordHash String
  name         String?
  locale       String           @default("en")
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  plans        WorkoutPlan[]
  sessions     WorkoutSession[]
}

model Muscle {
  id        String     @id @default(cuid())
  slug      String     @unique
  name      String
  exercises Exercise[]
}

model Exercise {
  id        String        @id @default(cuid())
  name      String
  equipment String?
  muscleId  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  muscle    Muscle        @relation(fields: [muscleId], references: [id])
  items     WorkoutItem[]
}

model WorkoutPlan {
  id        String       @id @default(cuid())
  userId    String
  title     String
  focus     String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  days      WorkoutDay[]
  user      User         @relation(fields: [userId], references: [id])
}

model WorkoutDay {
  id     String        @id @default(cuid())
  planId String
  label  String
  notes  String?
  plan   WorkoutPlan   @relation(fields: [planId], references: [id])
  items  WorkoutItem[]
}

model WorkoutItem {
  id          String       @id @default(cuid())
  dayId       String
  exerciseId  String
  order       Int
  targetSets  Int?
  targetReps  Int?
  targetRpe   Int?
  sessionSets SessionSet[]
  day         WorkoutDay   @relation(fields: [dayId], references: [id])
  exercise    Exercise     @relation(fields: [exerciseId], references: [id])
}

model WorkoutSession {
  id        String       @id @default(cuid())
  userId    String
  date      DateTime     @default(now())
  notes     String?
  createdAt DateTime     @default(now())
  sets      SessionSet[]
  user      User         @relation(fields: [userId], references: [id])
}

model SessionSet {
  id            String         @id @default(cuid())
  sessionId     String
  workoutItemId String
  setNumber     Int
  reps          Int
  weight        Float
  rpe           Float?
  createdAt     DateTime       @default(now())
  session       WorkoutSession @relation(fields: [sessionId], references: [id])
  workoutItem   WorkoutItem    @relation(fields: [workoutItemId], references: [id])
}
